version: '3'

services:
  service_discovery:
    container_name: service-discovery
    image: eugencic/service-discovery:latest
    ports:
      - "9090:9090"
    networks:
      - mynetwork

  traffic-analytics-database:
    container_name: traffic-analytics-database
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: 397777
      POSTGRES_DB: traffic-analytics-db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 15s
      retries: 5
    networks:
      - mynetwork

  traffic-regulation-database:
    container_name: traffic-regulation-database
    image: postgres:latest
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: 397777
      POSTGRES_DB: traffic-regulation-db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 15s
      retries: 5
    networks:
      - mynetwork

  traffic-analytics-service-1:
    container_name: traffic-analytics-service-1
    # image: eugencic/traffic-analytics-service:latest
    build:
      context: ./traffic-analytics/traffic-analytics-service
    environment:
      - SERVICE_NAME=traffic-analytics-service-1
      - SERVICE_PORT=7071
      - SERVICE_DISCOVERY_ENDPOINT=http://service-discovery:9090
    ports:
      - "7071:7071"
    restart: always
    depends_on:
      service_discovery:
        condition: service_started
      traffic-analytics-database:
        condition: service_healthy
    networks:
      - mynetwork

  traffic-analytics-service-2:
    container_name: traffic-analytics-service-2
    # image: eugencic/traffic-analytics-service:latest
    build:
      context: ./traffic-analytics/traffic-analytics-service
    environment:
      - SERVICE_NAME=traffic-analytics-service-2
      - SERVICE_PORT=7072
      - SERVICE_DISCOVERY_ENDPOINT=http://service-discovery:9090
    ports:
      - "7072:7071"
    restart: always
    depends_on:
      service_discovery:
        condition: service_started
      traffic-analytics-database:
        condition: service_healthy
    networks:
      - mynetwork

  traffic-analytics-service-3:
    container_name: traffic-analytics-service-3
    # image: eugencic/traffic-analytics-service:latest
    build:
      context: ./traffic-analytics/traffic-analytics-service
    environment:
      - SERVICE_NAME=traffic-analytics-service-3
      - SERVICE_PORT=7073
      - SERVICE_DISCOVERY_ENDPOINT=http://service-discovery:9090
    ports:
      - "7073:7071"
    restart: always
    depends_on:
      service_discovery:
        condition: service_started
      traffic-analytics-database:
        condition: service_healthy
    networks:
      - mynetwork

  traffic-regulation-service-1:
    container_name: traffic-regulation-service-1
    # image: eugencic/traffic-regulation-service:latest
    build:
      context: ./traffic-regulation/traffic-regulation-service
    environment:
      - SERVICE_NAME=traffic-regulation-service-1
      - SERVICE_PORT=8081
      - SERVICE_DISCOVERY_ENDPOINT=http://service-discovery:9090
      - PROMETHEUS_PORT=8001
    ports:
      - "8081:8081"
      - "8001:8001"
    restart: always
    depends_on:
      service_discovery:
        condition: service_started
      traffic-regulation-database:
        condition: service_healthy
    networks:
      - mynetwork

  traffic-regulation-service-2:
    container_name: traffic-regulation-service-2
    # image: eugencic/traffic-regulation-service:latest
    build:
      context: ./traffic-regulation/traffic-regulation-service
    environment:
      - SERVICE_NAME=traffic-regulation-service-2
      - SERVICE_PORT=8082
      - SERVICE_DISCOVERY_ENDPOINT=http://service-discovery:9090
      - PROMETHEUS_PORT=8002
    ports:
      - "8082:8081"
      - "8002:8002"
    restart: always
    depends_on:
      service_discovery:
        condition: service_started
      traffic-regulation-database:
        condition: service_healthy
    networks:
      - mynetwork

  traffic-regulation-service-3:
    container_name: traffic-regulation-service-3
    # image: eugencic/traffic-regulation-service:latest
    build:
      context: ./traffic-regulation/traffic-regulation-service
    environment:
      - SERVICE_NAME=traffic-regulation-service-3
      - SERVICE_PORT=8083
      - SERVICE_DISCOVERY_ENDPOINT=http://service-discovery:9090
      - PROMETHEUS_PORT=8003
    ports:
      - "8083:8081"
      - "8003:8003"
    restart: always
    depends_on:
      service_discovery:
        condition: service_started
      traffic-regulation-database:
        condition: service_healthy
    networks:
      - mynetwork

  traffic-analytics-load-balancer:
    container_name: traffic-analytics-load-balancer
    image: eugencic/traffic-analytics-load-balancer:latest
    ports:
      - "7000:7000"
    restart: always
    depends_on:
      service_discovery:
        condition: service_started
      traffic-analytics-service-1:
        condition: service_started
      traffic-analytics-service-2:
        condition: service_started
      traffic-analytics-service-3:
        condition: service_started
    networks:
      - mynetwork

  traffic-regulation-load-balancer:
    container_name: traffic-regulation-load-balancer
    image: eugencic/traffic-regulation-load-balancer:latest
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      service_discovery:
        condition: service_started
      traffic-regulation-service-1:
        condition: service_started
      traffic-regulation-service-2:
        condition: service_started
      traffic-regulation-service-3:
        condition: service_started
    networks:
      - mynetwork

  gateway:
    container_name: gateway
    # image: eugencic/gateway:latest
    build:
      context: ./gateway
    ports:
      - "6060:6060"
    restart: always
    depends_on:
      service_discovery:
        condition: service_started
      traffic-analytics-load-balancer:
        condition: service_started
      traffic-regulation-load-balancer:
        condition: service_started
    networks:
      - mynetwork

  cache-service:
    container_name: cache-service
    image: redis:latest
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9000:9090"
    networks:
      - mynetwork

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
