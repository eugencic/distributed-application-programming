// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: traffic.proto

package __

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrafficData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntersectionId int32  `protobuf:"varint,1,opt,name=intersection_id,json=intersectionId,proto3" json:"intersection_id,omitempty"`
	SignalStatus_1 int32  `protobuf:"varint,2,opt,name=signal_status_1,json=signalStatus1,proto3" json:"signal_status_1,omitempty"`
	VehicleCount   int32  `protobuf:"varint,3,opt,name=vehicle_count,json=vehicleCount,proto3" json:"vehicle_count,omitempty"`
	Incident       bool   `protobuf:"varint,4,opt,name=incident,proto3" json:"incident,omitempty"`
	Date           string `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Time           string `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TrafficData) Reset() {
	*x = TrafficData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficData) ProtoMessage() {}

func (x *TrafficData) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficData.ProtoReflect.Descriptor instead.
func (*TrafficData) Descriptor() ([]byte, []int) {
	return file_traffic_proto_rawDescGZIP(), []int{0}
}

func (x *TrafficData) GetIntersectionId() int32 {
	if x != nil {
		return x.IntersectionId
	}
	return 0
}

func (x *TrafficData) GetSignalStatus_1() int32 {
	if x != nil {
		return x.SignalStatus_1
	}
	return 0
}

func (x *TrafficData) GetVehicleCount() int32 {
	if x != nil {
		return x.VehicleCount
	}
	return 0
}

func (x *TrafficData) GetIncident() bool {
	if x != nil {
		return x.Incident
	}
	return false
}

func (x *TrafficData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TrafficData) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type TrafficDataReceiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TrafficDataReceiveResponse) Reset() {
	*x = TrafficDataReceiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficDataReceiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficDataReceiveResponse) ProtoMessage() {}

func (x *TrafficDataReceiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficDataReceiveResponse.ProtoReflect.Descriptor instead.
func (*TrafficDataReceiveResponse) Descriptor() ([]byte, []int) {
	return file_traffic_proto_rawDescGZIP(), []int{1}
}

func (x *TrafficDataReceiveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type IntersectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntersectionId int32 `protobuf:"varint,1,opt,name=intersection_id,json=intersectionId,proto3" json:"intersection_id,omitempty"`
}

func (x *IntersectionRequest) Reset() {
	*x = IntersectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntersectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntersectionRequest) ProtoMessage() {}

func (x *IntersectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntersectionRequest.ProtoReflect.Descriptor instead.
func (*IntersectionRequest) Descriptor() ([]byte, []int) {
	return file_traffic_proto_rawDescGZIP(), []int{2}
}

func (x *IntersectionRequest) GetIntersectionId() int32 {
	if x != nil {
		return x.IntersectionId
	}
	return 0
}

type TrafficAnalytics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntersectionId      int32   `protobuf:"varint,1,opt,name=intersection_id,json=intersectionId,proto3" json:"intersection_id,omitempty"`
	Timestamp           string  `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AverageVehicleCount float64 `protobuf:"fixed64,3,opt,name=average_vehicle_count,json=averageVehicleCount,proto3" json:"average_vehicle_count,omitempty"`
	PeakHours           string  `protobuf:"bytes,4,opt,name=peak_hours,json=peakHours,proto3" json:"peak_hours,omitempty"`
	AverageIncidents    float32 `protobuf:"fixed32,5,opt,name=average_incidents,json=averageIncidents,proto3" json:"average_incidents,omitempty"`
}

func (x *TrafficAnalytics) Reset() {
	*x = TrafficAnalytics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficAnalytics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficAnalytics) ProtoMessage() {}

func (x *TrafficAnalytics) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficAnalytics.ProtoReflect.Descriptor instead.
func (*TrafficAnalytics) Descriptor() ([]byte, []int) {
	return file_traffic_proto_rawDescGZIP(), []int{3}
}

func (x *TrafficAnalytics) GetIntersectionId() int32 {
	if x != nil {
		return x.IntersectionId
	}
	return 0
}

func (x *TrafficAnalytics) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *TrafficAnalytics) GetAverageVehicleCount() float64 {
	if x != nil {
		return x.AverageVehicleCount
	}
	return 0
}

func (x *TrafficAnalytics) GetPeakHours() string {
	if x != nil {
		return x.PeakHours
	}
	return ""
}

func (x *TrafficAnalytics) GetAverageIncidents() float32 {
	if x != nil {
		return x.AverageIncidents
	}
	return 0
}

var File_traffic_proto protoreflect.FileDescriptor

var file_traffic_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x6d, 0x61, 0x69, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x36, 0x0a,
	0x1a, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x13, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x68, 0x6f,
	0x75, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x61, 0x6b, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x10, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x32, 0xcc, 0x03, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x72, 0x12, 0x5f, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x6c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x19, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x22,
	0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x73, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x57,
	0x65, 0x65, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x19, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x75, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x78, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01,
	0x2a, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x77, 0x65, 0x65, 0x6b, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_traffic_proto_rawDescOnce sync.Once
	file_traffic_proto_rawDescData = file_traffic_proto_rawDesc
)

func file_traffic_proto_rawDescGZIP() []byte {
	file_traffic_proto_rawDescOnce.Do(func() {
		file_traffic_proto_rawDescData = protoimpl.X.CompressGZIP(file_traffic_proto_rawDescData)
	})
	return file_traffic_proto_rawDescData
}

var file_traffic_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_traffic_proto_goTypes = []interface{}{
	(*TrafficData)(nil),                // 0: main.TrafficData
	(*TrafficDataReceiveResponse)(nil), // 1: main.TrafficDataReceiveResponse
	(*IntersectionRequest)(nil),        // 2: main.IntersectionRequest
	(*TrafficAnalytics)(nil),           // 3: main.TrafficAnalytics
}
var file_traffic_proto_depIdxs = []int32{
	0, // 0: main.TrafficAnalyzer.ReceiveData:input_type -> main.TrafficData
	2, // 1: main.TrafficAnalyzer.GetTodayStatistics:input_type -> main.IntersectionRequest
	2, // 2: main.TrafficAnalyzer.GetLastWeekStatistics:input_type -> main.IntersectionRequest
	2, // 3: main.TrafficAnalyzer.GetNextWeekPredictions:input_type -> main.IntersectionRequest
	1, // 4: main.TrafficAnalyzer.ReceiveData:output_type -> main.TrafficDataReceiveResponse
	3, // 5: main.TrafficAnalyzer.GetTodayStatistics:output_type -> main.TrafficAnalytics
	3, // 6: main.TrafficAnalyzer.GetLastWeekStatistics:output_type -> main.TrafficAnalytics
	3, // 7: main.TrafficAnalyzer.GetNextWeekPredictions:output_type -> main.TrafficAnalytics
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_traffic_proto_init() }
func file_traffic_proto_init() {
	if File_traffic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_traffic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficDataReceiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntersectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficAnalytics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_traffic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_traffic_proto_goTypes,
		DependencyIndexes: file_traffic_proto_depIdxs,
		MessageInfos:      file_traffic_proto_msgTypes,
	}.Build()
	File_traffic_proto = out.File
	file_traffic_proto_rawDesc = nil
	file_traffic_proto_goTypes = nil
	file_traffic_proto_depIdxs = nil
}
